---
kind: Template
apiVersion: v1
metadata:
  name: carga-datos
  annotations:
    openshift.io/display-name: App Deploy Template
    description: A template to deploy your an App
    iconClass: icon-cube
    tags: carga-datos
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-password: "{.data['database-password']}"
    name: "${NAME}-redis"
  stringData:
    database-password: "${REDIS_PASSWORD}"
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: "${NAME}"
    name: "${NAME}"
  spec: {}
- kind: BuildConfig
  apiVersion: build.openshift.io/v1
  metadata:
    labels:
      build: "${NAME}"
      template: docker-build-template-binary-with-push-secret
    name: "${NAME}"
  spec:
    #failedBuildsHistoryLimit: 5
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: "${GIT_REPOSITORY_URL}"
        ref: "${GIT_REPOSITORY_REF}"
      type: Git
      #sourceSecret:
      #  name: "${GIT_SOURCE_SECRET}"
    strategy:
      dockerStrategy:
        dockerfilePath: "${DOCKERFILE_NAME}"
        buildArgs:
        - name: APP
          value: "${APP_RUN}"
        from:
          kind: "ImageStreamTag"
          name: "stacks-cpp-rhel8:latest"
      type: Docker
    #successfulBuildsHistoryLimit: 5
    triggers:
    - generic:
        secret: TELCEL_PERFILADOR_CORPORATIVO
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${NAME}"
    labels:
      name: "${NAME}"
  spec:
    replicas: 1
    selector:
      name: "${NAME}"
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          name: "${NAME}"
      spec:
        containers:
        - image: "${NAME}"
          env:
          - name: FILENAME
            value: "${FILENAME}"
          - name: REDIS_HOST
            value: "${REDIS_HOST}"
          - name: REDIS_PORT
            value: "${REDIS_PORT}"
          - name: REDIS_PASS
            valueFrom:
              secretKeyRef:
                key: database-password
                name: "${NAME}-redis"
          - name: REDIS_DATABASE
            value: "${REDIS_DATABASE}"
          - name: OMP_NUM_THREADS
            value: "${NUM_THREADS}"
          imagePullPolicy: Always
          name: "${NAME}"
          resources:
            limits:
              cpu: "1.5"
              memory: "200Mi"
            requests:
              cpu: "${CPU_REQ}"
              memory: "${MEMORY_REQ}"
          volumeMounts:
          - mountPath: /data
            name: app-pvc
          terminationMessagePath: "/dev/termination-log"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: app-pvc
          persistentVolumeClaim:
            claimName: "${PVC_NAME}"
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      type: ImageChange
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all objects and the related imagestream.
  required: true
- name: GIT_REPOSITORY_URL
  displayName: Git Repository URL
  description: The URL of the repository with your application source code.
  required: true
  value: http://telcel.di.sds.oficinarquitectura.prod:7777/EX407665/eredis-bulk-load.git
- name: GIT_REPOSITORY_REF
  displayName: Git Repository ref
  description: The ref field to check out a specific Git reference.
  required: true
  value: master
- name: GIT_SOURCE_SECRET
  displayName: Secret for git repository
  description: The name of the OCP secret that has credentials for the pipeline git repository.
  required: false
- name: APP_RUN
  displayName: Application name
  description: Application in C++ to build and run. (redis_data_load_series, redis_data_load_planes or redis_data_load_billing)
  required: true
- name: FILENAME
  displayName: Filename or dirname
  description: Filename or dirname from data loading.
  required: true
- name: REDIS_HOST
  displayName: Redis hostname
  description: Hostname for redis connection.
  required: true
- name: REDIS_PORT
  displayName: Redis port
  description: Port for redis connection.
  required: true
  value: "6379"
- name: REDIS_PASSWORD
  displayName: Redis Connection Password
  description: Password for the Redis connection user.
  required: true
- name: REDIS_DATABASE
  displayName: Redis database
  description: Redis logical database.
  required: false
  value: "0"
- name: PVC_NAME
  displayName: Persistent Volume Claim
  description: The name of the PVC.
  required: true
- name: DOCKERFILE_NAME
  displayName: Dockerfile name
  description: DOCKERFILE_NAME
  value: "Dockerfile"
  required: false
- name: CPU_REQ
  displayName: CPU request
  description: CPU request.
  value: "1"
  required: false
- name: MEMORY_REQ
  displayName: Memory request
  description: Memory request.
  value: "1.5Gi"
  required: false
- name: NUM_THREADS
  displayName: Num threads
  description: Determines the number of threads, preferably one by each CPU.
  value: "1"
  required: false
labels:
  template: "carga-datos-template"
  app: carga-datos